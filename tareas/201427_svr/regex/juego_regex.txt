Task1:
	\b(12|47|48)\b
	\b sirve para que encuentre el patrón exacto al inicio de cada cadena de caracteres
	(12|47|48) establece los números que busco encontrar
	\b (al final) establece que debe acabar ahí la cadena
Task 2:
	\b([0-9a-z]{2}(:[0-9a-z]{2}){5})\b
	ambos \b funcionan de la misma forma que el punto anterior
	([0-9a-z]{2}(:[0-9a-z]{2}){5}) esta sección se desglosa: 
		[0-9a-z]{2} está buscando exactamente dos caracteres decimal y letra minúscula
		(:[0-9a-z]{2}){5} aquí está haciendo lo mismo, pero buscando en un grupo.
				busca que haya 5 cadenas igual a la primera pero que antes de esta exista
Task 3:
	ftp:\/\/[^\s]*
	ftp:\/\/ se busca exactamente igual, porque se repeite en todos los casos. Se requieren los \ para diferenciar / del comando de regex
	\s se refiere a espacios entre palabras, entonces ^\s se refiere a que no haya espacios entre palabra
	pero para que este patrón pueda aparecer en varias ocasiones lo ponemos en un conjunto y pedimos que  aparezca en 0 o más ocasiones
	por lo tanto [\s]*
Task 4:
	\$.*?\$
	\$ determina que la cadena comenzará (primera iteración) y terminará (segunda iteración) con $
	. se refiere a que le seguirá cualquier caracter y .* a que debe haber cero o más 
	Finalmente .*? junto para designar un mínimo de veces necesario (0 o 1) para satisfacer el patrón
Task 5:
	\b(\d{2,3}\.){3}\d{1,3}
	\b pone que el inicio se verá de esta forma (\d{2,3}\.){3}
	\d{2,3}\. el \d{2,3} establece que comenzará con un decimal con entre dos y tres dígitos que se repetirán tres veces por el {3}
	\d{1,3} este comando especifica que después de los tres números con punto, le seguirá un último decimal de 2 a 3 dígitos
Task 6:
	\b[a-z]{2,4}\=(["']).*?(['"])
	\b[a-z]{2,4} hace que comience con dos a cuatro letras
	= indica que después de las 2-4 letras viene el signo =
	(["']) indica que el siguiente caracter será " o ' y .*? indica que puede seguir lo que sea sin espacios como en el Task 4
	cierra con (["')] para que finalice con " o '
	No logré que detectara entre la " y la '

